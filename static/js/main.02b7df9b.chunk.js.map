{"version":3,"sources":["Components/auth.js","Top/Header.js","Components/Weather.js","Components/Login.js","Components/About.js","Components/MyPage.js","Components/Memo.js","Components/AuthRoute.js","Components/Wish.js","Components/LogoutButton.js","App.js","index.js"],"names":["users","ID","password","name","Header","Container","Element","background-size","src","alt","height","width","resize","styled","div","Weather","props","getWeather","a","process","fetch","then","response","json","setState","temperature","Math","floor","main","temp","weather","icon","state","this","img_url","React","Component","Login","authenticated","login","location","useState","setID","setPassword","onKeyPress","e","key","handleClick","alert","from","pathname","to","type","style","inputStyle","value","onChange","target","placeholder","Button","onClick","button","borderTop","borderLeft","borderRight","About","Hello","MyPage","user","setName","edit","setEdit","handleToggleEdit","cursorStyle","cursor","background","border","outline","Memo","rows","setRows","changeText_start","id","tempRows","map","row","changeText_end","changeText_place","deleteRow","filter","memoStyle","length","tableStyle","d","i","td1_style","date","start","end","td2_style","walk","placeStyle","data","console","log","marginLeft","marginRight","margin","padding","AuthRoute","component","render","rest","Wish","withRouter","logout","history","LogoutBtnStyle","push","App","setUser","find","undefined","Error","signIn","Layout","NavList","NavItem","NavLogin","LoginButton","Content","exact","path","ul","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.02b7df9b.chunk.js","sourcesContent":["const users = [\r\n    { ID : \"admin\", password : \"1234\", name : \"administrator\"},\r\n    { ID : \"dbworud1234\", password : \"123456\", name : \"YuJaeKyung\"}\r\n]\r\n\r\nexport function signIn({ ID, password }) {\r\n    const user = users.find(\r\n        (user) => user.ID === ID && user.password === password\r\n    )\r\n    if (user === undefined) throw new Error()\r\n    return user\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n            <Element>\r\n                <span background-size = \"contain\">\r\n                    <img src = \"/images/walk.png\" alt=\"walk\" height = \"400px\" width = \"1080px\" resize = \"both\"/>\r\n                </span>\r\n            </Element>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Container = styled.div`\r\nwidth: 100%;\r\nheight: 400px;\r\n`\r\nconst Element = styled.div`\r\nmargin: 0 auto;\r\nwidth: 1080px;\r\nheight: 400px;\r\ndisplay: flex;\r\nflex-flow: row wrap;\r\n`","import React from 'react';\r\n\r\nclass Weather extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            temperature : 0,\r\n            name : '',\r\n            icon : '',\r\n        }\r\n    }\r\n    getWeather = async () => {\r\n        const apiKey = process.env.REACT_APP_API_KEY;\r\n        await fetch(`https://api.openweathermap.org/data/2.5/weather?q=Incheon&appid=${apiKey}`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            this.setState({\r\n                temperature : Math.floor(json.main.temp - 273.15),\r\n                name : json.weather[0].main,\r\n                icon : json.weather[0].icon,\r\n            });\r\n        });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getWeather();\r\n    }\r\n    \r\n    render() {\r\n        const { temperature, name, icon } = this.state;\r\n        const img_url = `http://openweathermap.org/img/w/${icon}.png`;\r\n    \r\n        return (\r\n            <>\r\n                <h1>오늘의 날씨</h1>\r\n                <img alt = \"weather_icon\" src = {img_url} />\r\n                <h3>온도 : {temperature}℃</h3>\r\n                <h3>날씨 : {name}</h3>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Login({ authenticated, login, location }) {\r\n    const [ID, setID] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const onKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleClick();\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        try {\r\n            login({ ID, password })\r\n        } catch (e) {\r\n            alert(\"로그인 실패\")\r\n            setID(\"\")\r\n            setPassword(\"\")\r\n        }\r\n    }\r\n\r\n    const { from } = location.state || { from: { pathname: \"/\" } }\r\n    if (authenticated) return <Redirect to={from} />\r\n\r\n    return (\r\n        <>\r\n            <h1>로그인</h1>\r\n            <input type=\"text\" style={inputStyle} value={ID} onChange={({ target: { value } }) => setID(value)}\r\n                placeholder=\"ID\" onKeyPress={onKeyPress} /><br />\r\n            <input type=\"password\" style={inputStyle} value={password} onChange={({ target: { value } }) => setPassword(value)}\r\n                placeholder=\"password\" onKeyPress={onKeyPress} /><br /><br />\r\n            <Button onClick={handleClick}>로그인</Button>\r\n        </>\r\n    )\r\n}\r\nexport default Login;\r\n\r\nconst Button = styled.button`\r\ncursor: pointer;\r\npadding: .440rem .75rem;\r\nbackground: #FFFF92;\r\nborder: 0;\r\noutline: 0;\r\n`\r\nconst inputStyle = {\r\n    borderTop: 0,\r\n    borderLeft: 0,\r\n    borderRight: 0,\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <Hello>\r\n                <h2>산책하는 사람들을 위한 서비스</h2>\r\n                산책한 날짜와 시간등을 메모하고<br/>\r\n                애완견, 친구, 사랑하는 사람과 같이 걷고 싶은 장소를\r\n                메모하여 기록해보세요 !<br/><br/>\r\n                React WebSite 2020 Created by Yu JaeKyung\r\n            </Hello>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\nconst Hello = styled.div`\r\nmargin: 0 auto;\r\nwidth: 50%;\r\n// border-bottom: 1px solid #d1d8e4;\r\n`\r\n// border-bottom: 1px solid #d1d8e4;","import React, { useState } from 'react';\r\n\r\nfunction MyPage({ user }) {\r\n    let [ID] = useState(user.ID);\r\n    let [password] = useState(user.password);\r\n    let [name, setName] = useState(user.name);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const handleToggleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n\r\n    if (edit) {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" value={name} onChange={handleChange} />\r\n                <button onClick={handleToggleEdit}>확인</button>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>아이디 : {ID}</h1>\r\n            <h1>비밀번호 : {password}</h1>\r\n            <h1>이름 : {name}&nbsp;<button style={cursorStyle} onClick={handleToggleEdit}>이름 수정</button></h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPage;\r\n\r\nconst cursorStyle = {\r\n    cursor: \"pointer\",\r\n    background: \"#FFFF92\",\r\n    border: 0,\r\n    outline: 0,\r\n}","import React, { useState } from 'react';\r\n\r\nfunction Memo() {\r\n    const [rows, setRows] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const handleToggleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const changeText_date = id => e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n\r\n        const tempRows = rows.map(row => {\r\n            if (row.id === id + 1) {\r\n                row[\"date\"] = value;\r\n            }\r\n            return row;\r\n        });\r\n        setRows(tempRows);\r\n    };\r\n\r\n    const changeText_start = id => e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n\r\n        const tempRows = rows.map(row => {\r\n            if (row.id === id + 1) {\r\n                row[\"start\"] = value;\r\n            }\r\n            return row;\r\n        });\r\n        setRows(tempRows);\r\n    };\r\n\r\n    const changeText_end = id => e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n\r\n        const tempRows = rows.map(row => {\r\n            if (row.id === id + 1) {\r\n                row[\"end\"] = value;\r\n            }\r\n            return row;\r\n        });\r\n        setRows(tempRows);\r\n    };\r\n\r\n    const changeText_place = id => e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n\r\n        const tempRows = rows.map(row => {\r\n            if (row.id === id + 1) {\r\n                row[\"walk\"] = value;\r\n            }\r\n            return row;\r\n        });\r\n        setRows(tempRows);\r\n    };\r\n\r\n    const addRow = () => {\r\n        let data = {\r\n            id: rows.length + 1,\r\n            date: \"\",\r\n            walk: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n        };\r\n        setRows([...rows, data]);\r\n    };\r\n\r\n    const allDeleteRow = () => {\r\n        setRows([]);\r\n    }\r\n\r\n    const deleteRow = id => () => {\r\n        let tempRows = rows.filter(row => {\r\n            return row.id !== id + 1;\r\n        });\r\n        setRows(tempRows);\r\n    }\r\n\r\n    const display = () => {\r\n        console.log(rows);\r\n    };\r\n    if (edit) {\r\n        return (\r\n            <div>\r\n                <h3>산책했던 장소와 시간을 기록해보세요 !</h3>\r\n                <div style={memoStyle}>\r\n                    {rows.length === 0 && (\r\n                        <button style={cursorStyle} onClick={handleToggleEdit}>추가 및 수정</button>\r\n                    )}\r\n                    {rows.length !== 0 && (\r\n                        <table style={tableStyle}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>날짜</th>\r\n                                    <th>시작시간</th>\r\n                                    <th>종료시간</th>\r\n                                    <th>산책 코스</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows.map((d, i) => (\r\n                                    <tr key={i}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td style = {td1_style}>\r\n                                            {d.date}\r\n                                        </td>\r\n                                        <td style = {td1_style}>\r\n                                            {d.start}\r\n                                        </td>\r\n                                        <td style = {td1_style}>\r\n                                            {d.end}\r\n                                        </td>\r\n                                        <td style = {td2_style}>\r\n                                            {d.walk}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button style={cursorStyle} onClick={handleToggleEdit}>추가 및 수정</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>산책했던 장소와 시간을 기록해보세요 !</h3>\r\n            <div style={memoStyle}>\r\n                {rows.length !== 0 && (\r\n                    <table style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>날짜</th>\r\n                                <th>시작시간</th>\r\n                                <th>종료시간</th>\r\n                                <th>산책 코스</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows.map((d, i) => (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>\r\n                                        <input type=\"date\" style={cursorStyle}\r\n                                            onChange={changeText_date(i)}\r\n                                            value={d.date} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"time\" style={cursorStyle}\r\n                                            onChange={changeText_start(i)}\r\n                                            value={d.start} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"time\" style={cursorStyle}\r\n                                            onChange={changeText_end(i)}\r\n                                            value={d.end} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\"\r\n                                            onChange={changeText_place(i)}\r\n                                            value={d.walk} style={placeStyle}\r\n                                            placeholder=\"산책다닌 장소를 입력해주세요 ! ex : ㅇㅇㅇ공원\"\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button style={cursorStyle} onClick={deleteRow(i)}>삭제</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n            <button style={cursorStyle} onClick={addRow}>추가</button>\r\n            <button style={cursorStyle} onClick={allDeleteRow}>초기화</button>\r\n            <button style={cursorStyle} onClick={handleToggleEdit}>확인</button>\r\n            <button style={cursorStyle} onClick={display}>콘솔 출력</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Memo;\r\n\r\nconst tableStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n}\r\nconst placeStyle = {\r\n    cursor: \"pointer\",\r\n    width: \"400px\",\r\n    borderTop: 0,\r\n    borderLeft: 0,\r\n    borderRight: 0,\r\n}\r\nconst memoStyle = {\r\n    margin: \"0 auto\",\r\n    width: \"50%\",\r\n    border: \"1px solid #a8ff78\"\r\n}\r\nconst td1_style = {\r\n    width: \"100px\"\r\n}\r\nconst td2_style = {\r\n    width: \"auto\"\r\n}\r\nconst cursorStyle = {\r\n    padding: \".440rem .75rem\",\r\n    background: \"#FFFF92\",\r\n    border: 0,\r\n    outline: 0,\r\n    cursor: \"pointer\"\r\n}","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction AuthRoute({ authenticated, component: Component, render, ...rest}) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render = {(props) =>\r\n            authenticated ? (\r\n                render ? (\r\n                    render(props)\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            ) : (\r\n                <Redirect to = {{ pathname : 'login', state : { from : props.location } }} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AuthRoute;","import React, { useState } from 'react';\r\n\r\n\r\nfunction Wish() {\r\n    const [rows, setRows] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const handleToggleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const changeText_place = id => e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n\r\n        const tempRows = rows.map(row => {\r\n            if (row.id === id + 1) {\r\n                row[\"walk\"] = value;\r\n            }\r\n            return row;\r\n        });\r\n        setRows(tempRows);\r\n    };\r\n\r\n    const addRow = () => {\r\n        let data = {\r\n            id: rows.length + 1,\r\n            date: \"\",\r\n            walk: \"\",\r\n            start: \"\",\r\n            end: \"\",\r\n        };\r\n        setRows([...rows, data]);\r\n    };\r\n\r\n    const allDeleteRow = () => {\r\n        setRows([]);\r\n    }\r\n\r\n    const deleteRow = id => () => {\r\n        let tempRows = rows.filter(row => {\r\n            return row.id !== id + 1;\r\n        });\r\n        setRows(tempRows);\r\n    }\r\n\r\n    if (edit) {\r\n        return (\r\n            <>\r\n                <h3>산책가고 싶은 장소를 입력해보세요 !</h3>\r\n                <div style={memoStyle}>\r\n                    {rows.length === 0 && (\r\n                        <button style={cursorStyle} onClick={handleToggleEdit}>추가 및 수정</button>\r\n                    )}\r\n                    {rows.length !== 0 && (\r\n                        <table style={tableStyle}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>No</th>\r\n                                    <th>장소</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {rows.map((d, i) => (\r\n                                    <tr key={i}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>\r\n                                            {d.walk}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button style={cursorStyle} onClick={handleToggleEdit}>추가 및 수정</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>산책가고 싶은 장소를 입력해보세요 !</h3>\r\n            <div style={memoStyle}>\r\n                {rows.length !== 0 && (\r\n                    <table style={tableStyle}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>장소</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rows.map((d, i) => (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>\r\n                                        <input type=\"text\"\r\n                                            onChange={changeText_place(i)}\r\n                                            value={d.walk} style={placeStyle}\r\n                                            placeholder=\"가고 싶은 장소를 입력해주세요 ! ex : ㅇㅇㅇ공원\"\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button style={cursorStyle} onClick={deleteRow(i)}>삭제</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n            <button style={cursorStyle} onClick={addRow}>추가</button>\r\n            <button style={cursorStyle} onClick={allDeleteRow}>초기화</button>\r\n            <button style={cursorStyle} onClick={handleToggleEdit}>확인</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wish;\r\n\r\nconst tableStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n}\r\nconst placeStyle = {\r\n    cursor: \"pointer\",\r\n    width: \"400px\"\r\n}\r\nconst memoStyle = {\r\n    margin: \"0 auto\",\r\n    width: \"50%\",\r\n    border: \"1px solid #a8ff78\"\r\n}\r\nconst cursorStyle = {\r\n    cursor: \"pointer\"\r\n}","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction LogoutButton({ logout, history }) {\r\n  const handleClick = () => {\r\n    logout();\r\n    history.push('/');\r\n  }\r\n  return <button style={LogoutBtnStyle} onClick={handleClick}>로그아웃</button>;\r\n}\r\n\r\nexport default withRouter(LogoutButton);\r\n\r\nconst LogoutBtnStyle = {\r\n  cursor: \"pointer\",\r\n  padding: \".440rem .75rem\",\r\n  background: \"#FFFF92\",\r\n  border: 0,\r\n  outline: 0,\r\n}","import React, { useState } from 'react';\nimport { signIn } from './Components/auth';\nimport styled from 'styled-components';\nimport Header from './Top/Header';\nimport { Route, Link, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Weather, About, Login, Wish, MyPage, Memo, AuthRoute, LogoutButton } from './Routes/index';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const authenticated = user != null;\n\n  const login = ({ ID, password }) => setUser(signIn({ ID, password }));\n  const logout = () => setUser(null);\n\n  return (\n    <Router>\n      <Layout>\n        <Header />\n        <NavList>\n          <NavItem><Link to='/'><Button>홈</Button></Link></NavItem>\n          <NavItem><Link to='/about'><Button>소개</Button></Link></NavItem>\n          <NavItem><Link to='/memo'><Button>산책 시간 메모</Button></Link></NavItem>\n          <NavItem><Link to='/wish'><Button>가고 싶은 장소</Button></Link></NavItem>\n          <NavItem><Link to='/mypage'><Button>마이페이지</Button></Link></NavItem>\n          <NavLogin>{authenticated ? (<LogoutButton logout = {logout} />) : (\n          <Link to='/login'><LoginButton>로그인</LoginButton></Link>)}</NavLogin>\n        </NavList>\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={Weather} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" render = {props => (\n              <Login authenticated = {authenticated} login = {login} {...props} />\n            )} />\n            <AuthRoute authenticated={authenticated} path=\"/mypage\"\n              render = {props => <MyPage user={user} {...props} />} />\n            <Route path=\"/wish\" component={Wish} />\n            <AuthRoute authenticated={authenticated} path=\"/memo\"\n              render = {props => <Memo/>} />\n          </Switch>\n        </Content>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default App;\n\nconst Layout = styled.div`\n// margin: 0 auto;\ndisplay: flex;\nwidth: 100%;\nflex-flow: row wrap;\n`\nconst Content = styled.div`\ntext-align: center;\nmargin: 0 auto;\nmargin-top: 50px;\ndisplay: inline-block;\nwidth: 100%;\n`\nconst Button = styled.button`\ncursor: pointer;\npadding: .440rem .75rem;\nbackground: #a8ff78;\nborder: 0;\noutline: 0;\ncolor: #000000;\n`\nconst NavList = styled.ul`\nwidth: 1040px;\nmargin-top: 0;\nmargin-left: auto;\nmargin-right: auto;\nbackground-color: #a8ff78;\n`\nconst NavItem = styled.ul`\ntext-align: center;\ndisplay:inline-block;\nheight: auto;\nwidth: auto;\n\n`\nconst NavLogin = styled.div`\nfloat: right;\nborder: 0;\noutline: 0;\nbackground-color: #FFFF92;\ncolor: #FFFF92;\ndisplay:inline-block;\nheight: auto;\nwidth: auto;\n`\nconst LoginButton = styled.button`\ncursor: pointer;\npadding: .440rem .75rem;\nbackground: #FFFF92;\nborder: 0;\noutline: 0;\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}